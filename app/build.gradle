import com.pp.viveafesta.buildsrc.Compose
import com.pp.viveafesta.buildsrc.Configs
import com.pp.viveafesta.buildsrc.Core
import com.pp.viveafesta.buildsrc.Libs
import com.pp.viveafesta.buildsrc.Tests

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.github.ben-manes.versions'
}

android {
    compileSdkVersion Configs.CompileSdkVersion

    defaultConfig {
        applicationId "com.pp.viveafesta"
        minSdkVersion Configs.MinSdkVersion
        targetSdkVersion Configs.TargetSdkVersion
        versionCode Configs.VersionCode
        versionName Configs.VersionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        // We use a bundled debug keystore, to allow debug builds from CI to be upgradable
        debug {
            storeFile rootProject.file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        compose true

        // Disable unused AGP features
        buildConfig false
        aidl false
        renderScript false
        resValues false
        shaders false
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.2.0'
    }

    packagingOptions {
        // Multiple dependency bring these files in. Exclude them to enable
        // our test APK to build (has no effect on our AARs)
        excludes += "/META-INF/AL2.0"
        excludes += "/META-INF/LGPL2.1"
    }

}

dependencies {
    implementation project(':presentation')
    implementation project(':domain')
    implementation project(':data')

    implementation Core.androidXCore
    implementation Core.appCompat
    implementation Core.material

    implementation Compose.activityCompose
    implementation Compose.ui
    implementation Compose.material
    implementation Compose.iconsExtended
    implementation Compose.tooling
    implementation Compose.runtime
    implementation Compose.hiltNavigation
    implementation Libs.Lottie.lottie
    implementation Libs.Accompanist.insets
    implementation Libs.GoogleLocation.location

    implementation Libs.Kotlin.stdlib
    implementation Libs.Coroutines.android

    implementation Libs.Hilt.library
    kapt Libs.Hilt.googleAndroidCompiler
    kapt Libs.Hilt.googleCompiler

    androidTestImplementation Tests.junit
    androidTestImplementation Tests.junitKotlin
    androidTestImplementation Compose.uiTest
    androidTestImplementation Libs.Coroutines.test
}